
[container]
name = "steam"

welcome_msg = '''
Run
  > su steam
  > steam-native
  > steam-native steam://run/440

'''

#runtime_hint = "arch-chroot"
runtime_hint = "nspawn"

# Internal sd disk
#disk_partuuid = "8f3ca68c-d031-2d41-849c-be5d9602e920"

# external scratch disk
disk_partuuids = [
  "e08214f5-cfc5-4252-afee-505dfcd23808"
]

# The tool looks up the mount point for disk_partuuid and adds this to the mount location.
# Disks must be mounted separately from azure-contain.
part_subfolder = "containers/steam"

# If root FS is empty or install flag missing, all of these are run as root.
install_setup_cmds = [
  # By default the tarball has a root.x86_64/ folder which we want the contents of placed at {container_root_dir}
  "wget -qO- 'http://mirror.adectra.com/archlinux/iso/2023.12.01/archlinux-bootstrap-x86_64.tar.gz' | tar xvz -C '{container_root_dir}' --strip-components=1",

  # Arch will need a good mirror list to install packages with
  "cp /etc/pacman.d/mirrorlist '{container_root_dir}'/etc/pacman.d/mirrorlist",

  # Enable multilib!
  "SH_IN_CONTAINER: echo '[multilib]' >> /etc/pacman.conf",
  "SH_IN_CONTAINER: echo 'Include = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf",
  # Turn off signature checks
  "SH_IN_CONTAINER: sed -i \"s/SigLevel.*=.*/SigLevel = Never/g\" /etc/pacman.conf",
  # Turn off space check
  "SH_IN_CONTAINER: sed -i \"s/^CheckSpace.*/#CheckSpace/g\" /etc/pacman.conf",

  # Steam needs utf-8 locale
  "SH_IN_CONTAINER: echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen",
  "SH_IN_CONTAINER: locale-gen",
  "SH_IN_CONTAINER: echo 'LANG=\"en_US.UTF-8\"' > /etc/locale.conf",

  "SH_IN_CONTAINER: pacman-key --init",
  "SH_IN_CONTAINER: pacman -S archlinux-keyring",
  "SH_IN_CONTAINER: pacman -Syu --noconfirm",

  # Now install packages!
  "SH_IN_CONTAINER: pacman -Sy --noconfirm mesa mesa-utils xterm lib32-mesa sudo vim ttf-liberation lib32-systemd steam steam-native-runtime vulkan-intel lib32-vulkan-intel intel-media-driver intel-compute-runtime",

  # Setup user 'steam'
  "SH_IN_CONTAINER: useradd -m -G games,render,input,video,users,dbus,wheel steam",
  "SH_IN_CONTAINER: echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/enablewheel",

  # Addtl stuff for input adjustments
  "SH_IN_CONTAINER: pacman -S --noconfirm xorg-server xorg-xinit xorg-server-utils mesa lib32-nvidia-utils nvidia-utils nvidia xf86-video-intel xf86-video-amdgpu",
  "SH_IN_CONTAINER: echo \"allowed_users = anybody\" >> /etc/X11/Xwrapper.config",

  "SH_IN_CONTAINER: pacman -S --noconfirm pipewire pipewire-audio pipewire-alsa pipewire-pulse wireplumber",


]

# Used for permissions + folder bind mounts, added after "systemd-nspawn -D /path/to/root"
nspawn_addtl_args = [
  "--capability=all",
  # "--capability=CAP_SYS_ADMIN",
  "--bind=/run/user/1000",
  "--bind=/var/lib/dbus",
  "--bind=/dev/dri",
  "--bind=/dev/snd",
  "--bind=/tmp",
  "--bind=/dev/nvidia0",
  "--bind=/dev/nvidia1",
  "--bind=/dev/nvidiactl",
  "--bind=/dev/nvidia-modeset",
  "--bind=/dev/nvidia-uvm",
  "--bind=/dev/nvidia-uvm-tools",
  "--bind=/dev/tty2", # used when running from framebuffer to allocate xorg stuffs
  "--user=steam", # exec as steam user we setup before, we expect it's ID to match our GUI user's ID (1000)
  "--bind=/dev/input",
  "--bind=/dev/hidraw0",
  "--bind=/dev/hidraw1",
  "--bind=/dev/hidraw2",
  "--bind=/dev/hidraw3",
  "--bind=/dev/hidraw4",
  "--bind=/dev/hidraw5",
  "--bind=/dev/hidraw6",
  "--bind=/dev/hidraw7",
  "--bind=/dev/hidraw8",
  "--bind=/dev/hidraw9",
  "--bind=/dev/hidraw10",
  "--bind=/dev/hidraw11",
  "--bind=/dev/hidraw12",
  "--bind=/dev/hidraw13",
  "--bind=/dev/hidraw14",
  "--bind=/dev/hidraw15",
  "--bind=/dev/hidraw16",
  "--property=DevicePolicy=auto",
  "--property=DeviceAllow=/dev/input/event0 rwm",
  "--property=DeviceAllow=/dev/input/event1 rwm",
  "--property=DeviceAllow=/dev/input/event2 rwm",
  "--property=DeviceAllow=/dev/input/event3 rwm",
  "--property=DeviceAllow=/dev/input/event4 rwm",
  "--property=DeviceAllow=/dev/input/event5 rwm",
  "--property=DeviceAllow=/dev/input/event6 rwm",
  "--property=DeviceAllow=/dev/input/event7 rwm",
  "--property=DeviceAllow=/dev/input/event8 rwm",
  "--property=DeviceAllow=/dev/input/event9 rwm",
  "--property=DeviceAllow=/dev/input/event10 rwm",
  "--property=DeviceAllow=/dev/input/event11 rwm",
  "--property=DeviceAllow=/dev/input/event12 rwm",
  "--property=DeviceAllow=/dev/input/event13 rwm",
  "--property=DeviceAllow=/dev/input/event14 rwm",
  "--property=DeviceAllow=/dev/input/event15 rwm",
  "--property=DeviceAllow=/dev/input/event16 rwm",
  "--property=DeviceAllow=/dev/input/event17 rwm",
  "--property=DeviceAllow=/dev/input/event18 rwm",
  "--property=DeviceAllow=/dev/input/event19 rwm",
  "--property=DeviceAllow=/dev/input/event20 rwm",
  "--property=DeviceAllow=/dev/input/event21 rwm",
  "--property=DeviceAllow=/dev/input/event22 rwm",
  "--property=DeviceAllow=/dev/input/event23 rwm",
  "--property=DeviceAllow=/dev/input/event24 rwm",
  "--property=DeviceAllow=/dev/input/event25 rwm",
  "--property=DeviceAllow=/dev/input/event26 rwm",
  "--property=DeviceAllow=/dev/input/event27 rwm",
  "--property=DeviceAllow=/dev/input/event28 rwm",
  "--property=DeviceAllow=/dev/input/event29 rwm",
  "--property=DeviceAllow=/dev/input/event30 rwm",
  "--property=DeviceAllow=/dev/input/event31 rwm",
  "--property=DeviceAllow=/dev/input/event32 rwm",
  "--property=DeviceAllow=/dev/input/event33 rwm",
  "--property=DeviceAllow=/dev/input/event34 rwm",
  "--property=DeviceAllow=/dev/hidraw0 rwm",
  "--property=DeviceAllow=/dev/hidraw1 rwm",
  "--property=DeviceAllow=/dev/hidraw2 rwm",
  "--property=DeviceAllow=/dev/hidraw3 rwm",
  "--property=DeviceAllow=/dev/hidraw4 rwm",
  "--property=DeviceAllow=/dev/hidraw5 rwm",
  "--property=DeviceAllow=/dev/hidraw6 rwm",
  "--property=DeviceAllow=/dev/hidraw7 rwm",
  "--property=DeviceAllow=/dev/hidraw8 rwm",
  "--property=DeviceAllow=/dev/hidraw9 rwm",
  "--property=DeviceAllow=/dev/hidraw10 rwm",
  "--property=DeviceAllow=/dev/hidraw11 rwm",
  "--property=DeviceAllow=/dev/hidraw12 rwm",
  "--property=DeviceAllow=/dev/hidraw13 rwm",
  "--property=DeviceAllow=/dev/hidraw14 rwm",
  "--property=DeviceAllow=/dev/hidraw15 rwm",
  "--property=DeviceAllow=/dev/hidraw16 rwm",
  "--bind=/dev/input/js0",
  "--bind=/dev/input/js1",
  "--bind=/dev/uinput",
  "--bind=/run/udev",
  "--"
]

fwd_env_vars = [
  "DISPLAY", "XDG_RUNTIME_DIR", "DBUS_SESSION_BUS_ADDRESS", "XDG_VTNR", "XDG_SESSION_ID"
]


